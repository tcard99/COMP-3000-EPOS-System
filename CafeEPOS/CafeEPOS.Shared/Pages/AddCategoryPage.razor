@page "/addCategory"
@using CafeEPOS.Shared.Layout
@layout NoLayout
@inject NavigationManager navigation
@using Microsoft.Maui.Controls
@using CafeEPOS.Shared.Services
@using Microsoft.AspNetCore.Components.QuickGrid
@using Models
@using System.Linq

<PageTitle> Add Category</PageTitle>

<link rel="stylesheet" href="_content/CafeEPOS.Shared/startingScreenStyles.css" />

<img src="_content/CafeEPOS.Shared/images/ImagePlaceholder.png" width="100" height="100" class="logo" alt="Logo" />
<h1 style="text-align:center; padding-top:50px; margin-bottom:175px;">EPOS System</h1>


<div class="container-fluid1">

    <h2 style="text-align:center;">Add Category</h2>


    <input type="text" placeholder="Enter category name" style="text-align:center; width:50%; border-radius:50px;" @bind="newCatName" />
    <br />
    <br />

    <select @bind="parentCatId">
        @foreach (var cat in parentCategorys)
        {
            <option value="@cat.Id">@cat.Name</option>
        }
    </select>

    <div class="container-fluid1">
        <div class="LoginBackContainer">
            <button class="backButton" @onclick="back">Back</button>
            <button class="loginButton" @onclick="add">Add</button>
        </div>
    </div>

</div>

<script src="_content/CafeEPOS.Shared/js/site.js"></script>

@code
{
    [Inject] IJSRuntime JS { get; set; }

    [Inject] IFormFactor FF { get; set; }

    [Inject] LocalStorageService _localStorage { get; set; }

    public List<CategoryModel> parentCategorys { get; set; } = new List<CategoryModel>();

    //Selected parent id
    public int parentCatId { get; set; }

    //Inputted cat name
    public string newCatName { get; set; }

    public string token { get; set; }

    public CategoryService catService = new CategoryService();



    //Get system account token
    public async Task<string> getToken()
    {
        return await _localStorage.GetValue("okten");
    }

    public void back()
    {
        navigation.NavigateTo("/category");
    }

    public void add()
    {
        JS.InvokeVoidAsync("showAlert", parentCatId);
    }

    protected async override Task OnInitializedAsync()
    {
        token = await getToken();
        parentCategorys = (await catService.GetAllParentCategories(token)).ToList();

    }
}
