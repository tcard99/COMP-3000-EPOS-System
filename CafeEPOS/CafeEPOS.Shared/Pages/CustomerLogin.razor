@page "/custLogin"
@using CafeEPOS.Shared.Layout
@layout NoLayout
@inject NavigationManager navigation
@using Microsoft.Maui.Controls
@using CafeEPOS.Shared.Services
@using System.Net.Mail


<PageTitle>Account Login</PageTitle>

<link rel="stylesheet" href="_content/CafeEPOS.Shared/startingScreenStyles.css" />


<img src="_content/CafeEPOS.Shared/images/ImagePlaceholder.png" width="100" height="100" class="logo" alt="Logo" />
<h1 style="text-align:center; padding-top:50px">EASY ORDER EPOS SYSTEM</h1>

<!--Put login title and input boxs in middle of page-->
<div class="container-fluid1">
    <h2 style="text-align:center">LOGIN</h2>

    <input type="email" placeholder="Enter Email" @bind="usernameVal" style="text-align:center; width:50%; border-radius:50px" />

    <br />

    <input type="password" placeholder="Enter Password" @bind="passwordVal" style="text-align:center; width:50%; border-radius:50px" @onkeypress="@Enter" />

    <div class="LoginBackContainer">

        <a href="/">
            <button class="backButton">Back</button>
        </a>

        <button class="loginButton" @onclick="login">Login</button>
    </div>
</div>

<script src="_content/CafeEPOS.Shared/js/site.js"></script>

@code
{
    //Allow me to use JS scripts and call them
    [Inject] IJSRuntime JS { get; set; }

    //Generated service on project creation allows you to know which device user is on
    [Inject] IFormFactor FF { get; set; }

    [Inject] LocalStorageService _localStorage { get; set; }

    //Get the values from the userinputs
    public string usernameVal { get; set; } = "test1@test1.co.uk";
    public string passwordVal { get; set; } = "password";




    //When login button clicked run this method
    public async void login()
    {
        //Check to see if input feilds have been given a value
        if (usernameVal == null || passwordVal == null)
        {
            if (FF.GetFormFactor().StartsWith("Web"))
            {
                await JS.InvokeVoidAsync("showAlert", $"Please enter all feilds");
            }
            else
            {
                await Application.Current.MainPage.DisplayAlert("Alert", "Please enter all feilds", "OK");
            }
        }
        else
        {
            //Check to see if given username is a valid email address
            if (EmailValidationService.isValidEmail(usernameVal) == false)
            {
                if (FF.GetFormFactor().StartsWith("Web"))
                {
                    await JS.InvokeVoidAsync("showAlert", $"Please enter a valid email");
                }
                else
                {
                    await Application.Current.MainPage.DisplayAlert("Alert", "Please enter a valid email", "OK");
                }
            }
            else
            {

                var authService = new AuthenticationService();

                var login = await authService.SystemAccountLoginCall(usernameVal, passwordVal);

                if (login == "")
                {
                    if (FF.GetFormFactor().StartsWith("Web"))
                    {
                        await JS.InvokeVoidAsync("showAlert", $"Incorrect username or password");
                    }
                    else
                    {
                        await Application.Current.MainPage.DisplayAlert("Alert", "Incorrect username or password", "OK");
                    }
                }
                else
                {
                    await _localStorage.StoreValue("okten", login);
                    navigation.NavigateTo("/SystemChoosePage");
                }
            }
        }
    }

    //Allow user to activate login method when enter key is pressed
    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter")
        {
            login();
        }
    }
}
